#!/bin/sh

# TODO check the options are all valid 


# TODO Check we have root permissions and report an error if not
echo You must be \"root\" for install to work correctly

# Copy the generic script that is used when no specific script is found for the tag ID
mkdir -p /etc/tagEventor
cp -f scripts/generic /etc/tagEventor/
echo Script \"scripts/generic\" copied to /etc/tagEventor/

# copy the tageventor binaries to the system directory
# TODO change make to build a release binary and install it instead
cp -f bin/Debug/tagEventor /usr/sbin
echo Executable \"bin/Debug/tagEventor\" copied to /usr/sbin/

# TODO once the two binaries are merged, we can remove one of these.
# TODO during this early stages I prefer to build, and hence install, two binaries
# TODO change make to build a release binary and install it insteadcp -f cpanel /usr/sbin
cp -f bin/Debug/cpanel /usr/sbin
echo Executable \"bin/Debug/cpanel\" copied to /usr/sbin/

# copy the init script to the system directory so that tag eventor will be started as a daemon
# TODO once we merge binaries and have a GNOME item running, this could be removed or disabled.
cp -f tagEventord /etc/init.d
echo Init script \"tagEventord\" copied to /etc/init.d/

# to have the init script actually run at start-up you need these links in the system directories
cd /etc/init.d
echo Adding init script links to /etc/rc\?.d with update-rc.d
update-rc.d -f tagEventord start 80 2 3 4 5 .
cd -

####### GNOME Specific install options
# put a desktop link in the right place and it will start executable with each GNOME session
# TODO when we merge binaries, this may need changing. At the moment it starts the cpanel binary.
cp tageventor.desktop /etc/xdg/autostart/
