#labels Featured
= Fix Urgent Issues =
== PCSC Lite dev  - ISSUE ==
I still have to modify the header files of the pcsc-lite dev files to get includes to work correctly. Either modify the code or Makefile to fix this, or confirm definatively and contact the developers with a patch (I e-mailed once already)

== Starting 'X' Programs from a daemon  - ISSUE ==
This is another major reported issue we really need to get out of the way ASAP.

= Minor Improvements to Existing Functionality =
== Daemon code review ==
  * I'd really appreciate someone with experience on writing linux or unix daemons taking a look at the code in tagEventor.c for the daemon, for mutual exclusion using lock files as I'm not convinced it's bulletproof.
  * Also, I'd like it to check for the lockfile BEFORE it forks, so that an error message can be given to the user or script invoking it before it forks and fails. Then best to lock it again in the forked process to be sure.
== init scripts ==
  * The /etc/init.d script could be improved in a number of ways I think, such as catching a few corner cases that might cause failures, as well as making more standard compared to others. In doing that I think some of the logic in the application itself for daemonizing could be simplified and made more portable, as at the moment the 'C' code does what many others do in the init script.
== use reader LED colors ==
From reading the spec of the ACS reader it appears you can control the color of the LED (green, amber and red). I thought we could use this to give the user some feedback. Show that a tag was recognized and that action was launched or that an error was detected in the starting of the event/script. This might be especially useful as some events take a time to start and the user maybe tempted to place and remove the tag a few times until they see some action.

= Ease of acquiring =
== Install Packages for users ==
  * Build a Tiny Core Extension (TCE) for the Tiny Core Linux System, so tagEventor can be included in the tc-squared web-thin-client project which is based on Tiny Core
Create binary installation packages for supported systems
  * Debian .deb package for Ubuntu and other debian based Linux distributions
  * Packages for other Linux distribution packages

= New Functionality =
== Integration ==
Consider a better way of generating system events than scripts. Maybe one that's more tightly integrated with each OS it runs on. This maybe related to the "control panel" functionality suggested below.

== Security / authentication ==
  * It seems there is some mechanism with the embedded SAM card in the tag reader to do some authentication to the reader. Not sure how it applies, works or how to implement it. Investigation required.
  * I'd like to have the program also get the local PC MAC address being used, and the processor ID and maybe use them as additional security or to authenticate a client device.

== Login / Authentication ==
One of the common issues for inexpert or infrequent computer users (and hence a source of frustration for them and supports calls for companies) is loss of login and password info. So I suggest that for many users and uses a physical key in the form of an RFID tag (attached to a card, or keyring) or device (such as a mobile phone with NFC support) would be a good solution. Security would be derived mainly from possesion of it, and use on a known PC or tag reader.
    * Ability to use RFID key to Login / Keychain / Authenticate in new ways easing PC usage and reducing issues related to forgotten logins or passwords etc

== Control Panel / User Preferences ==
Work is progressing on a GNOME/Gtk+ system tray resident application and "control panel" UI to administer events/actions associated with tags.

= Supported Hardware =
  * Support more reader hardware (work is under way on this)
  * Support more tag types

= New Platforms and Operating Systems =
  * Windows (XP, Vista, 7) port

= Tools =
== Tag read / write ==
  * I *think* that in the Mi-Fare tags used a few bytes can be reprogrammed. So, write a script or program to:-
    * Read the entire contents of the Mi-fare tag memory (see spec document in download section)
    * Write the bytes that can be written, and read them back to verify

Send other suggestions to mailto:info@autelic.org